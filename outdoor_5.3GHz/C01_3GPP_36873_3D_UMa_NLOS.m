%% Multi-frequency simulations

% This tutorial demonstrates how to perform simultaneous multi-frequency simulations at two carrier
% frequencies: 2.6 GHz and 28 GHz in an Urban-Macrocell deployment. The BS is equipped with two
% different array antennas. A conventional high-gain antenna operates at 2.6 GHz. The higher
% frequency band uses a massive-MIMO array antenna with in an 8x8 dual-polarized setup. The model is
% consistent in both, the spatial domain and the frequency domain. Simulation assumptions are in
% accordance with 3GPP 38.901 v14.1.0 (see Section 7.6.5 Correlation modeling for multi-frequency
% simulations).
%
% Identical parameters for each frequency:
%
% * LOS / NLOS state must be the same
% * BS and MT positions are the same (antenna element positions are different!)
% * Cluster delays and angles for each multi-path component are the same
% * Spatial consistency of the LSPs is identical
%
% Differences:
%
% * Antenna patterns are different for each frequency
% * Path-loss is different for each frequency
% * Path-powers are different for each frequency
% * Delay- and angular spreads are different
% * K-Factor is different
% * XPR of the NLOS components is different


%% Basic setup
% Multiple frequencies are set in the simulation parameters by providing a vector of frequency
% sample points. A new layout is created with one 25 m high BS positions and 100 MT positions. The
% MTs are placed in accordance with the 3GPP assumptions, where 80% of them are situated indoors at
% different floor levels.
for number = 1:100
    
    
    set(0,'defaultTextFontSize', 18)                        % Default Font Size
    set(0,'defaultAxesFontSize', 18)                        % Default Font Size
    set(0,'defaultAxesFontName','Times')                    % Default Font Type
    set(0,'defaultTextFontName','Times')                    % Default Font Type
    set(0,'defaultFigurePaperPositionMode','auto')          % Default Plot position
    set(0,'DefaultFigurePaperType','<custom>')              % Default Paper Type
    set(0,'DefaultFigurePaperSize',[14.5 7.7])            	% Default Paper Size
    
    s = qd_simulation_parameters;
    s.center_frequency = [5.1e9 5.1e9 5.3e9];              % Assign two frequencies, the first one is redundent frequency
    no_user = 10;
    l = qd_layout( s );                                     % New QuaDRiGa layout
    l.tx_position = [0 0 20]';                              % 20 m BS height
    l.no_rx = no_user;                                          % 200 MTs
    
    l.randomize_rx_positions( 100, 1.5, 1.5, 0 );           % Assign random user positions
    l.rx_position(1,:) = l.rx_position(1,:) + 110;                %
    
    floor = randi(5,1,l.no_rx) + 3;                         % Set random floor levels
    for n = 1:l.no_rx
        floor( n ) =  randi(  floor( n ) );
    end
    l.rx_position(3,:) = 3*(floor-1) + 1.5;
    
    indoor_rx = l.set_scenario('3GPP_3D_UMa',[],[],0);    % Set the scenario
    l.rx_position(3,~indoor_rx) = 1.5;                      % Set outdoor-users to 1.5 m height
    
    N = 1;
    M = 32;
    %% Antenna set-up
    % Two different antenna configurations are used at the BS. The 2.6 GHz antenna is constructed from 8
    % vertically stacked patch elements with +/- 45 degree polarization. The electric downtilt is set to
    % 8 degree. The mm-wave antenna uses 64 dual-polarized elements in a 8x8 massive-MIMO array
    % configuration. The antennas are assigned to the BS by an array of "qd_arrayant" objects. Rows
    % correspond to the frequency, columns to the BS. There is only 1 BS in the layout. The mobile
    % terminal uses a vertically polarized omni-directional antenna for both frequencies.
    
    % a_35000_Mhz  = qd_arrayant( '3gpp-3d',  16, 8, s.center_frequency(1), 6, 8 );
    % a_35000_Mhz  = qd_arrayant.generate( '3gpp-mmw',  16, 8, s.center_frequency(1), 6, 8 );
    a_redundent  = qd_arrayant.generate( '3gpp-3d',  N, M, s.center_frequency(1), 3 );
    a_51000_Mhz  = qd_arrayant.generate( '3gpp-3d',  N, M, s.center_frequency(2), 3 );
    a_53000_Mhz  = qd_arrayant.generate( '3gpp-3d',  N, M, s.center_frequency(3), 3 );
    
    
    l.tx_array(1,1) = a_redundent;                           % Set 2.6 GHz antenna
    l.tx_array(2,1) = a_51000_Mhz;
    l.tx_array(3,1) = a_53000_Mhz;
    
    l.rx_array = qd_arrayant('omni');                       % Set omni-rx antenna
    
    
    %% Generate channel coefficients
    % Channel coefficients are generated by calling "l.get_channels". The output is an array of QuaDRiGa
    % channel objects. The first dimension corresponds to the MTs (100). The second dimension
    % corresponds to the number of BSs (1) and the third dimension corresponds to the number of
    % frequencies.
    
    c = l.get_channels;
    CCM = cell(4,no_user);
%     delay = cell(4,no_user);
%     EoD = cell(4,no_user);
%     AoD = cell(4,no_user);
%     PW = cell(4,no_user);
%     CGain = cell(4,no_user);
    no_sc = 1024;
    for idx_UD = 1:2
        for i = 1:no_user
            c(i,1,idx_UD+1).individual_delays = 0;
        end
        for iii = 1:no_user
            freq_response(idx_UD+1,iii,:,:) = c(iii,idx_UD+1).fr(no_sc*15000,1024); %clear CFR; CFR(:) = abs(freq_response(1,:,3)); CFR = CFR(1:2:end);
            CCM{idx_UD,iii}(:,:) = freq_response(idx_UD+1,iii,1:2:end,:); % Channel Coefficient Matrix (or CFR)
%             delay{idx_UD,iii}(:) = c(iii,1,idx_UD+1).delay;
%             EoD{idx_UD,iii}(:) = c(iii,1,idx_UD+1).par.EoD_cb;
%             AoD{idx_UD,iii}(:) = c(iii,idx_UD+1).par.AoD_cb;
%             PW{idx_UD,iii}(:) = c(iii,idx_UD+1).par.pow_cb;
%             CGain{idx_UD,iii}(:) = c(iii,idx_UD+1).coeff(1,1,:);
            
            
           
        end
    end
    number
    f1 = ['matnew' num2str(number) '.mat'];
    save(f1,'CCM')
    clear all
end