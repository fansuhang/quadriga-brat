QuaDRiGa requires lots of memory to generate data. Thus, we need to generate data iteratively.
On the other hand, the generated data is in cell format. So we should transform them into matrix format to load in Python.
Conduct following procedures to generate desired channels.
1. Place all the scripts in the "tutorials" folder.
2. Adjust desired setting and parameters of QuaDRiGa in "C01_3GPP_36873_UMa_NLOS"
3. To transform data from cell format to matrix format using "Proc_data"
4. Collect all the data and save as a mat file using "collect_all_data"

From Max's email (2021-01-05):

The attached link is for the data generated by QuaDRiGa.
A 32-antenna ULA is considered at gNB side and UE only has one antenna.
All antennas are assumed to be omnidirectional.
The uplink and downlink operating frequencies are at 5.1 and 5.3 GHz, respectively.
Each of them uses a bandwidth of 20 MHz with 1024 subcarriers.
The heights of UEs and BS are set at 1.5 and 20 meters.
The channel model is 3GPP UMa outdoor-to-outdoor 3D channel model.
The channel matrices with the size of 32 by 64 are obtained by doing 2D FFT, shifting the angle domain, and discarding the redundant region.
The number of 64 is chosen because there are largely delayed paths in this outdoor channel model.
 